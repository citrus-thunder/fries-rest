openapi: 3.0.3

info:
  version: 0.0.1
  title: Fries Quest REST API
  description: >-
    Allows access to CRUD Operations via REST API for the Fries Quest
    Twitch-Integrated RPG

tags: 
  - name: Player Data
    description: Manage Player Data
  - name: Monster Data
    description: Manage Monster Data
  - name: Weapon Data
    description: Manage Weapon Data
  - name: Armor Data
    description: Manage Armor Data
  - name: Item Data
    description: Manage Item Data

#servers:
#  - description: LocalHost
#    url: http://localhost:5000

paths:
  /player/{userId}:
    post:
      description: Create new Player record with ID `userId`
      tags:
        - Player Data
      parameters: 
        - name: userId
          description: Unique identifier of the Player
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '409':
          description: Record with given ID already exists
        '500':
          description: Unhandled Server Error

    get:
      description: Retrieve Player record with ID `userId`
      tags:
        - Player Data
      parameters: 
        - name: userId
          description: Unique identifier of the Player
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Player'
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    put:
      description: Update Player record with ID `userId`
      tags:
        - Player Data
      parameters:
        - name: userId
          description: Unique identifier of the Player
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    delete:
      description: Delete Player record with ID `userId`
      tags:
        - Player Data
      parameters:
        - name: userId
          description: Unique identifier of the Player
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record not found
        '500':
          description: Unhandled Server Error

  /monster/{monsterId}:
    post:
      description: Create new Monster record with ID `monsterId`
      tags:
        - Monster Data
      parameters: 
        - name: monsterId
          description: Unique identifier of the Monster
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '409':
          description: Record with given ID already exists
        '500':
          description: Unhandled Server Error

    get:
      description: Retrieve Monster record with ID `monsterId`
      tags:
        - Monster Data
      parameters: 
        - name: monsterId
          description: Unique identifier of the Monster
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Monster'
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    put:
      description: Update Monster record with ID `monsterId`
      tags:
        - Monster Data
      parameters:
        - name: monsterId
          description: Unique identifier of the Monster
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    delete:
      description: Delete Monster record with ID `monsterId`
      tags:
        - Monster Data
      parameters:
        - name: monsterId
          description: Unique identifier of the Monster
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record not found
        '500':
          description: Unhandled Server Error

  /weapon/{weaponId}:
    post:
      description: Create new Weapon record with ID `weaponId`
      tags:
        - Weapon Data
      parameters: 
        - name: weaponId
          description: Unique identifier of the Weapon
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '409':
          description: Record with given ID already exists
        '500':
          description: Unhandled Server Error

    get:
      description: Retrieve Weapon record with ID `weaponId`
      tags:
        - Weapon Data
      parameters: 
        - name: weaponId
          description: Unique identifier of the Weapon
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Weapon'
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    put:
      description: Update Weapon record with ID `weaponId`
      tags:
        - Weapon Data
      parameters:
        - name: weaponId
          description: Unique identifier of the Weapon
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    delete:
      description: Delete Weapon record with ID `weaponId`
      tags:
        - Weapon Data
      parameters:
        - name: weaponId
          description: Unique identifier of the Weapon
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record not found
        '500':
          description: Unhandled Server Error

  /armor/{armorId}:
    post:
      description: Create new Armor record with ID `armorId`
      tags:
        - Armor Data
      parameters: 
        - name: armorId
          description: Unique identifier of the Armor
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '409':
          description: Record with given ID already exists
        '500':
          description: Unhandled Server Error

    get:
      description: Retrieve Armor record with ID `armorId`
      tags:
        - Armor Data
      parameters: 
        - name: armorId
          description: Unique identifier of the Armor
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Armor'
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    put:
      description: Update Armor record with ID `armorId`
      tags:
        - Armor Data
      parameters:
        - name: armorId
          description: Unique identifier of the Armor
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    delete:
      description: Delete Armor record with ID `armorId`
      tags:
        - Armor Data
      parameters:
        - name: armorId
          description: Unique identifier of the Armor
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record not found
        '500':
          description: Unhandled Server Error

  /item/{itemId}:
    post:
      description: Create new Item record with ID `itemId`
      tags:
        - Item Data
      parameters: 
        - name: itemId
          description: Unique identifier of the Item
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '409':
          description: Record with given ID already exists
        '500':
          description: Unhandled Server Error

    get:
      description: Retrieve Item record with ID `itemId`
      tags:
        - Item Data
      parameters: 
        - name: itemId
          description: Unique identifier of the Item
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Item'
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    put:
      description: Update Item record with ID `itemId`
      tags:
        - Item Data
      parameters:
        - name: itemId
          description: Unique identifier of the Item
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record Not Found
        '500':
          description: Unhandled Server Error

    delete:
      description: Delete Item record with ID `itemId`
      tags:
        - Item Data
      parameters:
        - name: itemId
          description: Unique identifier of the Item
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordId'
      responses:
        '200':
          description: Successful Operation
        '400':
          description: Malformed Request Data
        '401':
          description: Unauthorized
        '404':
          description: Record not found
        '500':
          description: Unhandled Server Error
          
components:
  schemas:
    RecordId:
      description: Unique Record Id
      type: number
    Player:
      description: Player Record
      type: object
      properties:
        _id:
          type: string
          description: MongoDB unique document ID
        username:
          type: string
          description: >-
            Player's displayed name
        userId:
          type: number
          description: Player's unique Twitch ID
    Monster:
      description: Monster Record
      type: object
      properties:
        _id:
          type: string
          description: MongoDB unique document ID
        monsterId:
          type: number
          description: Monster's unique local ID
    Weapon:
      description: Weapon Record
      type: object
      properties:
        _id:
          type: string
          description: MongoDB unique document ID
        weaponId:
          type: number
          description: Weapon's unique local ID
    Armor:
      description: Armor Record
      type: object
      properties:
        _id:
          type: string
          description: MongoDB unique document ID
        armorId:
          type: number
          description: Armor's unique local ID
    Item:
      description: Item Record
      type: object
      properties:
        _id:
          type: string
          description: MongoDB unique document ID
        itemId:
          type: number
          description: Item's unique local ID